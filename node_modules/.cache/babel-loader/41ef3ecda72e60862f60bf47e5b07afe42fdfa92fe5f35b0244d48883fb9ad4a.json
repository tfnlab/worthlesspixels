{"ast":null,"code":"import _objectWithoutProperties from \"/Users/armenmerikyan/Desktop/wd/tfnlab.com/metagascarnext/stage-presets-gltfjsx/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _objectSpread from \"/Users/armenmerikyan/Desktop/wd/tfnlab.com/metagascarnext/stage-presets-gltfjsx/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _excluded = [\"enabled\", \"firstHitOnly\", \"children\", \"strategy\", \"verbose\", \"setBoundingBox\", \"maxDepth\", \"maxLeafTris\"];\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree } from '@react-three/fiber';\nimport * as React from 'react';\nimport { Mesh } from 'three';\nimport { SAH, acceleratedRaycast, computeBoundsTree, disposeBoundsTree } from 'three-mesh-bvh';\nvar isMesh = function isMesh(child) {\n  return child.isMesh;\n};\n/**\n * @deprecated Use the Bvh component instead\n */\n\nfunction useBVH(mesh, options) {\n  options = _objectSpread({\n    strategy: SAH,\n    verbose: false,\n    setBoundingBox: true,\n    maxDepth: 40,\n    maxLeafTris: 10\n  }, options);\n  React.useEffect(function () {\n    if (mesh.current) {\n      mesh.current.raycast = acceleratedRaycast;\n      var geometry = mesh.current.geometry;\n      geometry.computeBoundsTree = computeBoundsTree;\n      geometry.disposeBoundsTree = disposeBoundsTree;\n      geometry.computeBoundsTree(options);\n      return function () {\n        if (geometry.boundsTree) {\n          geometry.disposeBoundsTree();\n        }\n      };\n    }\n  }, [mesh, JSON.stringify(options)]);\n}\nvar Bvh = /*#__PURE__*/React.forwardRef(function (_ref, fref) {\n  var _ref$enabled = _ref.enabled,\n    enabled = _ref$enabled === void 0 ? true : _ref$enabled,\n    _ref$firstHitOnly = _ref.firstHitOnly,\n    firstHitOnly = _ref$firstHitOnly === void 0 ? false : _ref$firstHitOnly,\n    children = _ref.children,\n    _ref$strategy = _ref.strategy,\n    strategy = _ref$strategy === void 0 ? SAH : _ref$strategy,\n    _ref$verbose = _ref.verbose,\n    verbose = _ref$verbose === void 0 ? false : _ref$verbose,\n    _ref$setBoundingBox = _ref.setBoundingBox,\n    setBoundingBox = _ref$setBoundingBox === void 0 ? true : _ref$setBoundingBox,\n    _ref$maxDepth = _ref.maxDepth,\n    maxDepth = _ref$maxDepth === void 0 ? 40 : _ref$maxDepth,\n    _ref$maxLeafTris = _ref.maxLeafTris,\n    maxLeafTris = _ref$maxLeafTris === void 0 ? 10 : _ref$maxLeafTris,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var ref = React.useRef(null);\n  var raycaster = useThree(function (state) {\n    return state.raycaster;\n  });\n  React.useImperativeHandle(fref, function () {\n    return ref.current;\n  }, []);\n  React.useEffect(function () {\n    if (enabled) {\n      var options = {\n        strategy: strategy,\n        verbose: verbose,\n        setBoundingBox: setBoundingBox,\n        maxDepth: maxDepth,\n        maxLeafTris: maxLeafTris\n      };\n      var group = ref.current; // This can only safely work if the component is used once, but there is no alternative.\n      // Hijacking the raycast method to do it for individual meshes is not an option as it would\n      // cost too much memory ...\n\n      raycaster.firstHitOnly = firstHitOnly;\n      group.traverse(function (child) {\n        // Only include meshes that do not yet have a boundsTree and whose raycast is standard issue\n        if (isMesh(child) && !child.geometry.boundsTree && child.raycast === Mesh.prototype.raycast) {\n          child.raycast = acceleratedRaycast;\n          child.geometry.computeBoundsTree = computeBoundsTree;\n          child.geometry.disposeBoundsTree = disposeBoundsTree;\n          child.geometry.computeBoundsTree(options);\n        }\n      });\n      return function () {\n        delete raycaster.firstHitOnly;\n        group.traverse(function (child) {\n          if (isMesh(child) && child.geometry.boundsTree) {\n            child.geometry.disposeBoundsTree();\n            child.raycast = Mesh.prototype.raycast;\n          }\n        });\n      };\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: ref\n  }, props), children);\n});\nexport { Bvh, useBVH };","map":{"version":3,"names":["_extends","useThree","React","Mesh","SAH","acceleratedRaycast","computeBoundsTree","disposeBoundsTree","isMesh","child","useBVH","mesh","options","strategy","verbose","setBoundingBox","maxDepth","maxLeafTris","useEffect","current","raycast","geometry","boundsTree","JSON","stringify","Bvh","forwardRef","fref","enabled","firstHitOnly","children","props","ref","useRef","raycaster","state","useImperativeHandle","group","traverse","prototype","createElement"],"sources":["/Users/armenmerikyan/Desktop/wd/tfnlab.com/metagascarnext/stage-presets-gltfjsx/node_modules/@react-three/drei/core/useBVH.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree } from '@react-three/fiber';\nimport * as React from 'react';\nimport { Mesh } from 'three';\nimport { SAH, acceleratedRaycast, computeBoundsTree, disposeBoundsTree } from 'three-mesh-bvh';\n\nconst isMesh = child => child.isMesh;\n/**\n * @deprecated Use the Bvh component instead\n */\n\n\nfunction useBVH(mesh, options) {\n  options = {\n    strategy: SAH,\n    verbose: false,\n    setBoundingBox: true,\n    maxDepth: 40,\n    maxLeafTris: 10,\n    ...options\n  };\n  React.useEffect(() => {\n    if (mesh.current) {\n      mesh.current.raycast = acceleratedRaycast;\n      const geometry = mesh.current.geometry;\n      geometry.computeBoundsTree = computeBoundsTree;\n      geometry.disposeBoundsTree = disposeBoundsTree;\n      geometry.computeBoundsTree(options);\n      return () => {\n        if (geometry.boundsTree) {\n          geometry.disposeBoundsTree();\n        }\n      };\n    }\n  }, [mesh, JSON.stringify(options)]);\n}\nconst Bvh = /*#__PURE__*/React.forwardRef(({\n  enabled = true,\n  firstHitOnly = false,\n  children,\n  strategy = SAH,\n  verbose = false,\n  setBoundingBox = true,\n  maxDepth = 40,\n  maxLeafTris = 10,\n  ...props\n}, fref) => {\n  const ref = React.useRef(null);\n  const raycaster = useThree(state => state.raycaster);\n  React.useImperativeHandle(fref, () => ref.current, []);\n  React.useEffect(() => {\n    if (enabled) {\n      const options = {\n        strategy,\n        verbose,\n        setBoundingBox,\n        maxDepth,\n        maxLeafTris\n      };\n      const group = ref.current; // This can only safely work if the component is used once, but there is no alternative.\n      // Hijacking the raycast method to do it for individual meshes is not an option as it would\n      // cost too much memory ...\n\n      raycaster.firstHitOnly = firstHitOnly;\n      group.traverse(child => {\n        // Only include meshes that do not yet have a boundsTree and whose raycast is standard issue\n        if (isMesh(child) && !child.geometry.boundsTree && child.raycast === Mesh.prototype.raycast) {\n          child.raycast = acceleratedRaycast;\n          child.geometry.computeBoundsTree = computeBoundsTree;\n          child.geometry.disposeBoundsTree = disposeBoundsTree;\n          child.geometry.computeBoundsTree(options);\n        }\n      });\n      return () => {\n        delete raycaster.firstHitOnly;\n        group.traverse(child => {\n          if (isMesh(child) && child.geometry.boundsTree) {\n            child.geometry.disposeBoundsTree();\n            child.raycast = Mesh.prototype.raycast;\n          }\n        });\n      };\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: ref\n  }, props), children);\n});\n\nexport { Bvh, useBVH };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}