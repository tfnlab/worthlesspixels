{"ast":null,"code":"import _slicedToArray from \"/Users/armenmerikyan/Desktop/wd/tfnlab.com/metagascarnext/stage-presets-gltfjsx/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useLayoutEffect as e } from \"@radix-ui/react-use-layout-effect\";\nimport { useComposedRefs as n } from \"@radix-ui/react-compose-refs\";\nimport * as t from \"react\";\nexport var Presence = function Presence(u) {\n  var o = u.present,\n    i = u.children,\n    s = function (n) {\n      var _t$useState = t.useState(),\n        _t$useState2 = _slicedToArray(_t$useState, 2),\n        u = _t$useState2[0],\n        o = _t$useState2[1],\n        i = t.useRef({}),\n        s = t.useRef(n),\n        c = t.useRef(\"none\"),\n        a = n ? \"mounted\" : \"unmounted\",\n        _ref = function (e, n) {\n          return t.useReducer(function (e, t) {\n            var r = n[e][t];\n            return null != r ? r : e;\n          }, e);\n        }(a, {\n          mounted: {\n            UNMOUNT: \"unmounted\",\n            ANIMATION_OUT: \"unmountSuspended\"\n          },\n          unmountSuspended: {\n            MOUNT: \"mounted\",\n            ANIMATION_END: \"unmounted\"\n          },\n          unmounted: {\n            MOUNT: \"mounted\"\n          }\n        }),\n        _ref2 = _slicedToArray(_ref, 2),\n        d = _ref2[0],\n        m = _ref2[1];\n      return t.useEffect(function () {\n        var e = r(i.current);\n        c.current = \"mounted\" === d ? e : \"none\";\n      }, [d]), e(function () {\n        var e = i.current,\n          t = s.current;\n        if (t !== n) {\n          var _u = c.current,\n            _o = r(e);\n          if (n) m(\"MOUNT\");else if (\"none\" === _o || \"none\" === (null == e ? void 0 : e.display)) m(\"UNMOUNT\");else {\n            var _e = _u !== _o;\n            m(t && _e ? \"ANIMATION_OUT\" : \"UNMOUNT\");\n          }\n          s.current = n;\n        }\n      }, [n, m]), e(function () {\n        if (u) {\n          var _e2 = function _e2(e) {\n              var n = r(i.current).includes(e.animationName);\n              e.target === u && n && m(\"ANIMATION_END\");\n            },\n            _n = function _n(e) {\n              e.target === u && (c.current = r(i.current));\n            };\n          return u.addEventListener(\"animationstart\", _n), u.addEventListener(\"animationcancel\", _e2), u.addEventListener(\"animationend\", _e2), function () {\n            u.removeEventListener(\"animationstart\", _n), u.removeEventListener(\"animationcancel\", _e2), u.removeEventListener(\"animationend\", _e2);\n          };\n        }\n      }, [u, m]), {\n        isPresent: [\"mounted\", \"unmountSuspended\"].includes(d),\n        ref: t.useCallback(function (e) {\n          e && (i.current = getComputedStyle(e)), o(e);\n        }, [])\n      };\n    }(o),\n    c = \"function\" == typeof i ? i({\n      present: s.isPresent\n    }) : t.Children.only(i),\n    a = n(s.ref, c.ref);\n  return \"function\" == typeof i || s.isPresent ? /*#__PURE__*/t.cloneElement(c, {\n    ref: a\n  }) : null;\n};\nfunction r(e) {\n  return (null == e ? void 0 : e.animationName) || \"none\";\n}\nPresence.displayName = \"Presence\";","map":{"version":3,"mappings":";;;;OAUA,IAAMA,WAAqCC,SAArCD,SAAqCC;EACzC,IAAQC,IAAsBD,EAAxBC;IAAWC,IAAaF,EAAxBE;IACAC,IAmBR,UAAqBF;MACnB,kBAAwBG,EAAMC;QAAAA;QAAvBC;QAAMC;QACPC,IAAYJ,EAAMK,OAA4B;QAC9CC,IAAiBN,EAAMK,OAAOR;QAC9BU,IAAuBP,EAAMK,OAAe;QAC5CG,IAAeX,IAAU,YAAY;QAAA,OCzBtC,UACLW,GACAC;UAEA,OAAOT,EAAMU,WAAW,UAACC,GAAwBC;YAC/C,IAAMC,IAAaJ,EAAQE,GAAeC;YAC1C,OAAOC,gBAAaF;UAAAA,GACnBH;QAAAA,CDmBmBM,CAAgBN,GAAc;UAClDO,SAAS;YACPC,SAAS;YACTC,eAAe;UAAA;UAEjBC,kBAAkB;YAChBC,OAAO;YACPC,eAAe;UAAA;UAEjBC,WAAW;YACTF,OAAO;UAAA;QAAA;QAAA;QAVJR;QAAOW;MAqFd,OAvEAtB,EAAMuB,UAAU;QACd,IAAMC,IAAuBC,EAAiBrB,EAAUsB;QACxDnB,EAAqBmB,UAAoB,cAAVf,IAAsBa,IAAuB;MAAA,GAC3E,CAACb,KAEJgB,EAAgB;QACd,IAAMC,IAASxB,EAAUsB;UACnBG,IAAavB,EAAeoB;QAGlC,IAF0BG,MAAehC,GAElB;UACrB,IAAMiC,KAAoBvB,EAAqBmB;YACzCF,KAAuBC,EAAiBG;UAE9C,IAAI/B,GACFyB,EAAK,cACA,IAA6B,WAAzBE,MAAuD,YAApBI,uBAAQG,UAGpDT,EAAK,gBACA;YAOL,IAAMU,KAAcF,OAAsBN;YAGxCF,EADEO,KAAcG,KACX,kBAEA;UAAA;UAIT1B,EAAeoB,UAAU7B;QAAAA;MAAAA,GAE1B,CAACA,GAASyB,KAEbK,EAAgB;QACd,IAAIzB,GAAM;UAMR,IAAM+B,MAAsBrB,SAAtBqB,IAAsBrB;cAC1B,IACMsB,IADuBT,EAAiBrB,EAAUsB,SACRS,SAASvB,EAAMwB;cAC3DxB,EAAMyB,WAAWnC,KAAQgC,KAC3BZ,EAAK;YAAA;YAGHgB,KAAwB1B,SAAxB0B,GAAwB1B;cACxBA,EAAMyB,WAAWnC,MAEnBK,EAAqBmB,UAAUD,EAAiBrB,EAAUsB;YAAAA;UAM9D,OAHAxB,EAAKqC,iBAAiB,kBAAkBD,KACxCpC,EAAKqC,iBAAiB,mBAAmBN,MACzC/B,EAAKqC,iBAAiB,gBAAgBN,MAC/B;YACL/B,EAAKsC,oBAAoB,kBAAkBF,KAC3CpC,EAAKsC,oBAAoB,mBAAmBP,MAC5C/B,EAAKsC,oBAAoB,gBAAgBP;UAAAA;QAAAA;MAAAA,GAG5C,CAAC/B,GAAMoB,KAEH;QACLmB,WAAW,CAAC,WAAW,oBAAoBN,SAASxB;QACpD+B,KAAK1C,EAAM2C,YAAazC;UAClBA,MAAME,EAAUsB,UAAUkB,iBAAiB1C,KAC/CC,EAAQD;QAAAA,GACP;MAAA;IAAA,CAnHY2C,CAAYhD;IAEvBiD,IACgB,qBAAbhD,IACHA,EAAS;MAAED,SAASE,EAAS0C;IAAAA,KAC7BzC,EAAM+C,SAASC,KAAKlD;IAGpB4C,IAAMO,EAAgBlD,EAAS2C,KAAMI,EAAcJ;EAEzD,OADuC,qBAAb5C,KACLC,EAAS0C,yBAAYzC,EAAMkD,aAAaJ,GAAO;IAAEJ;EAAAA,KAAS;AAAA;AA+GjF,SAASjB,EAAiBG;EACxB,QAAOA,uBAAQQ,kBAAiB;AAAA;AA7GlCzC,SAASwD,cAAc","names":["Presence","props","present","children","presence","React","useState","node","setNode","stylesRef","useRef","prevPresentRef","prevAnimationNameRef","initialState","machine","useReducer","state","event","nextState","$d88c0747af12355025ed3195fb48c68a$export$useStateMachine","mounted","UNMOUNT","ANIMATION_OUT","unmountSuspended","MOUNT","ANIMATION_END","unmounted","send","useEffect","currentAnimationName","getAnimationName","current","useLayoutEffect","styles","wasPresent","prevAnimationName","display","isAnimating","handleAnimationEnd","isCurrentAnimation","includes","animationName","target","handleAnimationStart","addEventListener","removeEventListener","isPresent","ref","useCallback","getComputedStyle","usePresence","child","Children","only","useComposedRefs","cloneElement","displayName"],"sources":["/Users/armenmerikyan/Desktop/wd/tfnlab.com/metagascarnext/stage-presets-gltfjsx/node_modules/leva/node_modules/@radix-ui/react-tooltip/node_modules/@radix-ui/react-presence/dist/packages/react/presence/src/Presence.tsx","/Users/armenmerikyan/Desktop/wd/tfnlab.com/metagascarnext/stage-presets-gltfjsx/node_modules/leva/node_modules/@radix-ui/react-tooltip/node_modules/@radix-ui/react-presence/dist/packages/react/presence/src/useStateMachine.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { useStateMachine } from './useStateMachine';\n\ninterface PresenceProps {\n  present: boolean;\n  children: React.ReactElement | ((props: { present: boolean }) => React.ReactElement);\n}\n\nconst Presence: React.FC<PresenceProps> = (props) => {\n  const { present, children } = props;\n  const presence = usePresence(present);\n\n  const child = (\n    typeof children === 'function'\n      ? children({ present: presence.isPresent })\n      : React.Children.only(children)\n  ) as React.ReactElement;\n\n  const ref = useComposedRefs(presence.ref, (child as any).ref);\n  const forceMount = typeof children === 'function';\n  return forceMount || presence.isPresent ? React.cloneElement(child, { ref }) : null;\n};\n\nPresence.displayName = 'Presence';\n\n/* -------------------------------------------------------------------------------------------------\n * usePresence\n * -----------------------------------------------------------------------------------------------*/\n\nfunction usePresence(present: boolean) {\n  const [node, setNode] = React.useState<HTMLElement>();\n  const stylesRef = React.useRef<CSSStyleDeclaration>({} as any);\n  const prevPresentRef = React.useRef(present);\n  const prevAnimationNameRef = React.useRef<string>('none');\n  const initialState = present ? 'mounted' : 'unmounted';\n  const [state, send] = useStateMachine(initialState, {\n    mounted: {\n      UNMOUNT: 'unmounted',\n      ANIMATION_OUT: 'unmountSuspended',\n    },\n    unmountSuspended: {\n      MOUNT: 'mounted',\n      ANIMATION_END: 'unmounted',\n    },\n    unmounted: {\n      MOUNT: 'mounted',\n    },\n  });\n\n  React.useEffect(() => {\n    const currentAnimationName = getAnimationName(stylesRef.current);\n    prevAnimationNameRef.current = state === 'mounted' ? currentAnimationName : 'none';\n  }, [state]);\n\n  useLayoutEffect(() => {\n    const styles = stylesRef.current;\n    const wasPresent = prevPresentRef.current;\n    const hasPresentChanged = wasPresent !== present;\n\n    if (hasPresentChanged) {\n      const prevAnimationName = prevAnimationNameRef.current;\n      const currentAnimationName = getAnimationName(styles);\n\n      if (present) {\n        send('MOUNT');\n      } else if (currentAnimationName === 'none' || styles?.display === 'none') {\n        // If there is no exit animation or the element is hidden, animations won't run\n        // so we unmount instantly\n        send('UNMOUNT');\n      } else {\n        /**\n         * When `present` changes to `false`, we check changes to animation-name to\n         * determine whether an animation has started. We chose this approach (reading\n         * computed styles) because there is no `animationrun` event and `animationstart`\n         * fires after `animation-delay` has expired which would be too late.\n         */\n        const isAnimating = prevAnimationName !== currentAnimationName;\n\n        if (wasPresent && isAnimating) {\n          send('ANIMATION_OUT');\n        } else {\n          send('UNMOUNT');\n        }\n      }\n\n      prevPresentRef.current = present;\n    }\n  }, [present, send]);\n\n  useLayoutEffect(() => {\n    if (node) {\n      /**\n       * Triggering an ANIMATION_OUT during an ANIMATION_IN will fire an `animationcancel`\n       * event for ANIMATION_IN after we have entered `unmountSuspended` state. So, we\n       * make sure we only trigger ANIMATION_END for the currently active animation.\n       */\n      const handleAnimationEnd = (event: AnimationEvent) => {\n        const currentAnimationName = getAnimationName(stylesRef.current);\n        const isCurrentAnimation = currentAnimationName.includes(event.animationName);\n        if (event.target === node && isCurrentAnimation) {\n          send('ANIMATION_END');\n        }\n      };\n      const handleAnimationStart = (event: AnimationEvent) => {\n        if (event.target === node) {\n          // if animation occurred, store its name as the previous animation.\n          prevAnimationNameRef.current = getAnimationName(stylesRef.current);\n        }\n      };\n      node.addEventListener('animationstart', handleAnimationStart);\n      node.addEventListener('animationcancel', handleAnimationEnd);\n      node.addEventListener('animationend', handleAnimationEnd);\n      return () => {\n        node.removeEventListener('animationstart', handleAnimationStart);\n        node.removeEventListener('animationcancel', handleAnimationEnd);\n        node.removeEventListener('animationend', handleAnimationEnd);\n      };\n    }\n  }, [node, send]);\n\n  return {\n    isPresent: ['mounted', 'unmountSuspended'].includes(state),\n    ref: React.useCallback((node: HTMLElement) => {\n      if (node) stylesRef.current = getComputedStyle(node);\n      setNode(node);\n    }, []),\n  };\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getAnimationName(styles?: CSSStyleDeclaration) {\n  return styles?.animationName || 'none';\n}\n\nexport { Presence };\nexport type { PresenceProps };\n","import * as React from 'react';\n\ntype Machine<S> = { [k: string]: { [k: string]: S } };\ntype MachineState<T> = keyof T;\ntype MachineEvent<T> = keyof UnionToIntersection<T[keyof T]>;\n\n// 🤯 https://fettblog.eu/typescript-union-to-intersection/\ntype UnionToIntersection<T> = (T extends any ? (x: T) => any : never) extends (x: infer R) => any\n  ? R\n  : never;\n\nexport function useStateMachine<M>(\n  initialState: MachineState<M>,\n  machine: M & Machine<MachineState<M>>\n) {\n  return React.useReducer((state: MachineState<M>, event: MachineEvent<M>): MachineState<M> => {\n    const nextState = (machine[state] as any)[event];\n    return nextState ?? state;\n  }, initialState);\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}