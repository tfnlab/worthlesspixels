{"ast":null,"code":"import * as o from \"react\";\nexport var useLayoutEffect = Boolean(null === globalThis || void 0 === globalThis ? void 0 : globalThis.document) ? o.useLayoutEffect : function () {};","map":{"version":3,"mappings":";OASA,IAAMA,kBAAkBC,QAAO,SAACC,mBAAD,MAACA,kBAAD,IAACA,WAAYC,YAAYC,EAAMJ,kBAAkB","names":["useLayoutEffect","Boolean","globalThis","document","React"],"sources":["/Users/armenmerikyan/Desktop/wd/tfnlab.com/metagascarnext/stage-presets-gltfjsx/node_modules/leva/node_modules/@radix-ui/react-tooltip/node_modules/@radix-ui/react-id/node_modules/@radix-ui/react-use-layout-effect/dist/packages/react/use-layout-effect/src/useLayoutEffect.tsx"],"sourcesContent":["import * as React from 'react';\n\n/**\n * On the server, React emits a warning when calling `useLayoutEffect`.\n * This is because neither `useLayoutEffect` nor `useEffect` run on the server.\n * We use this safe version which suppresses the warning by replacing it with a noop on the server.\n *\n * See: https://reactjs.org/docs/hooks-reference.html#uselayouteffect\n */\nconst useLayoutEffect = Boolean(globalThis?.document) ? React.useLayoutEffect : () => {};\n\nexport { useLayoutEffect };\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}