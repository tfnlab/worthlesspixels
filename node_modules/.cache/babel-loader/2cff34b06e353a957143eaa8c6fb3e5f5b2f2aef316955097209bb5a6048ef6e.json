{"ast":null,"code":"import _objectSpread from \"/Users/armenmerikyan/Desktop/wd/tfnlab.com/metagascarnext/stage-presets-gltfjsx/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/armenmerikyan/Desktop/wd/tfnlab.com/metagascarnext/stage-presets-gltfjsx/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _slicedToArray from \"/Users/armenmerikyan/Desktop/wd/tfnlab.com/metagascarnext/stage-presets-gltfjsx/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _excluded = [\"__scopePopper\", \"virtualRef\"],\n  _excluded2 = [\"__scopePopper\", \"side\", \"sideOffset\", \"align\", \"alignOffset\", \"collisionTolerance\", \"avoidCollisions\"],\n  _excluded3 = [\"__scopePopper\", \"offset\"];\nimport * as e from \"@radix-ui/react-arrow\";\nimport { Primitive as o } from \"@radix-ui/react-primitive\";\nimport { useSize as r } from \"@radix-ui/react-use-size\";\nimport { useRect as t } from \"@radix-ui/react-use-rect\";\nimport { createContextScope as n } from \"@radix-ui/react-context\";\nimport { useComposedRefs as i } from \"@radix-ui/react-compose-refs\";\nimport { getPlacementData as p } from \"@radix-ui/popper\";\nimport * as s from \"react\";\nimport a from \"@babel/runtime/helpers/esm/extends\";\nvar _n = n(\"Popper\"),\n  _n2 = _slicedToArray(_n, 2),\n  c = _n2[0],\n  l = _n2[1];\nexport { l as createPopperScope };\nvar _c = c(\"Popper\"),\n  _c2 = _slicedToArray(_c, 2),\n  f = _c2[0],\n  d = _c2[1];\nexport var Popper = function Popper(e) {\n  var o = e.__scopePopper,\n    r = e.children,\n    _s$useState = s.useState(null),\n    _s$useState2 = _slicedToArray(_s$useState, 2),\n    t = _s$useState2[0],\n    n = _s$useState2[1]; /*#__PURE__*/\n  return s.createElement(f, {\n    scope: o,\n    anchor: t,\n    onAnchorChange: n\n  }, r);\n}; /*#__PURE__*/\nexport var PopperAnchor = /*#__PURE__*/s.forwardRef(function (e, r) {\n  var t = e.__scopePopper,\n    n = e.virtualRef,\n    p = _objectWithoutProperties(e, _excluded),\n    c = d(\"PopperAnchor\", t),\n    l = s.useRef(null),\n    f = i(r, l);\n  return s.useEffect(function () {\n    c.onAnchorChange((null == n ? void 0 : n.current) || l.current);\n  }), n ? null : /*#__PURE__*/s.createElement(o.div, a({}, p, {\n    ref: f\n  }));\n}); /*#__PURE__*/\nvar _c3 = c(\"PopperContent\"),\n  _c4 = _slicedToArray(_c3, 2),\n  u = _c4[0],\n  m = _c4[1];\nexport var PopperContent = /*#__PURE__*/s.forwardRef(function (e, n) {\n  var c = e.__scopePopper,\n    _e$side = e.side,\n    l = _e$side === void 0 ? \"bottom\" : _e$side,\n    f = e.sideOffset,\n    _e$align = e.align,\n    m = _e$align === void 0 ? \"center\" : _e$align,\n    w = e.alignOffset,\n    h = e.collisionTolerance,\n    _e$avoidCollisions = e.avoidCollisions,\n    x = _e$avoidCollisions === void 0 ? !0 : _e$avoidCollisions,\n    v = _objectWithoutProperties(e, _excluded2),\n    P = d(\"PopperContent\", c),\n    _s$useState3 = s.useState(),\n    _s$useState4 = _slicedToArray(_s$useState3, 2),\n    A = _s$useState4[0],\n    g = _s$useState4[1],\n    E = t(P.anchor),\n    _s$useState5 = s.useState(null),\n    _s$useState6 = _slicedToArray(_s$useState5, 2),\n    y = _s$useState6[0],\n    C = _s$useState6[1],\n    S = r(y),\n    _s$useState7 = s.useState(null),\n    _s$useState8 = _slicedToArray(_s$useState7, 2),\n    R = _s$useState8[0],\n    O = _s$useState8[1],\n    _ = r(R),\n    b = i(n, function (e) {\n      return C(e);\n    }),\n    z = function () {\n      var _s$useState9 = s.useState(void 0),\n        _s$useState10 = _slicedToArray(_s$useState9, 2),\n        e = _s$useState10[0],\n        o = _s$useState10[1];\n      return s.useEffect(function () {\n        var e;\n        function r() {\n          o({\n            width: window.innerWidth,\n            height: window.innerHeight\n          });\n        }\n        function t() {\n          window.clearTimeout(e), e = window.setTimeout(r, 100);\n        }\n        return r(), window.addEventListener(\"resize\", t), function () {\n          return window.removeEventListener(\"resize\", t);\n        };\n      }, []), e;\n    }(),\n    T = z ? DOMRect.fromRect(_objectSpread(_objectSpread({}, z), {}, {\n      x: 0,\n      y: 0\n    })) : void 0,\n    _p = p({\n      anchorRect: E,\n      popperSize: S,\n      arrowSize: _,\n      arrowOffset: A,\n      side: l,\n      sideOffset: f,\n      align: m,\n      alignOffset: w,\n      shouldAvoidCollisions: x,\n      collisionBoundariesRect: T,\n      collisionTolerance: h\n    }),\n    k = _p.popperStyles,\n    L = _p.arrowStyles,\n    B = _p.placedSide,\n    D = _p.placedAlign,\n    H = void 0 !== B; /*#__PURE__*/\n  return s.createElement(\"div\", {\n    style: k,\n    \"data-radix-popper-content-wrapper\": \"\"\n  }, /*#__PURE__*/s.createElement(u, {\n    scope: c,\n    arrowStyles: L,\n    onArrowChange: O,\n    onArrowOffsetChange: g\n  }, /*#__PURE__*/s.createElement(o.div, a({\n    \"data-side\": B,\n    \"data-align\": D\n  }, v, {\n    style: _objectSpread(_objectSpread({}, v.style), {}, {\n      animation: H ? void 0 : \"none\"\n    }),\n    ref: b\n  }))));\n}); /*#__PURE__*/\nexport var PopperArrow = /*#__PURE__*/s.forwardRef(function (o, r) {\n  var t = o.__scopePopper,\n    n = o.offset,\n    i = _objectWithoutProperties(o, _excluded3),\n    p = m(\"PopperArrow\", t),\n    c = p.onArrowOffsetChange;\n  return s.useEffect(function () {\n    return c(n);\n  }, [c, n]), /*#__PURE__*/s.createElement(\"span\", {\n    style: _objectSpread(_objectSpread({}, p.arrowStyles), {}, {\n      pointerEvents: \"none\"\n    })\n  }, /*#__PURE__*/s.createElement(\"span\", {\n    ref: p.onArrowChange,\n    style: {\n      display: \"inline-block\",\n      verticalAlign: \"top\",\n      pointerEvents: \"auto\"\n    }\n  }, /*#__PURE__*/s.createElement(e.Root, a({}, i, {\n    ref: r,\n    style: _objectSpread(_objectSpread({}, i.style), {}, {\n      display: \"block\"\n    })\n  }))));\n}); /*#__PURE__*/\nexport var Root = Popper;\nexport var Anchor = PopperAnchor;\nexport var Content = PopperContent;\nexport var Arrow = PopperArrow;","map":{"version":3,"mappings":"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","names":["createContextScope","createPopperContext","createPopperScope","PopperProvider","usePopperContext","Popper","props","__scopePopper","children","React","useState","anchor","setAnchor","_react","$d4fb2a15a6483a4f85af0f96fd68687d$var$PopperProvider","scope","onAnchorChange","PopperAnchor","forwardRef","forwardedRef","virtualRef","anchorProps","context","ref","useRef","composedRefs","useComposedRefs","useEffect","current","Primitive","div","_babelRuntimeHelpersEsmExtends","PopperContentProvider","useContentContext","PopperContent","side","sideOffset","align","alignOffset","collisionTolerance","avoidCollisions","contentProps","arrowOffset","setArrowOffset","anchorRect","useRect","content","setContent","contentSize","useSize","arrow","setArrow","arrowSize","node","windowSize","undefined","setWindowSize","debounceTimerId","updateWindowSize","width","window","innerWidth","height","innerHeight","handleResize","clearTimeout","setTimeout","addEventListener","removeEventListener","useWindowSize","collisionBoundariesRect","DOMRect","fromRect","x","y","getPlacementData","popperSize","shouldAvoidCollisions","popperStyles","arrowStyles","placedSide","placedAlign","isPlaced","style","$d4fb2a15a6483a4f85af0f96fd68687d$var$PopperContentProvider","onArrowChange","onArrowOffsetChange","animation","PopperArrow","offset","arrowProps","pointerEvents","display","verticalAlign","_radixUiReactArrow","Root","Anchor","Content","Arrow"],"sources":["/Users/armenmerikyan/Desktop/wd/tfnlab.com/metagascarnext/stage-presets-gltfjsx/node_modules/leva/node_modules/@radix-ui/react-tooltip/node_modules/@radix-ui/react-popper/dist/packages/react/popper/src/Popper.tsx"],"sourcesContent":["import * as React from 'react';\nimport { getPlacementData } from '@radix-ui/popper';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useRect } from '@radix-ui/react-use-rect';\nimport { useSize } from '@radix-ui/react-use-size';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport * as ArrowPrimitive from '@radix-ui/react-arrow';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\nimport type { Side, Align } from '@radix-ui/popper';\nimport type { Measurable } from '@radix-ui/rect';\n\n/* -------------------------------------------------------------------------------------------------\n * Popper\n * -----------------------------------------------------------------------------------------------*/\n\nconst POPPER_NAME = 'Popper';\n\ntype ScopedProps<P> = P & { __scopePopper?: Scope };\nconst [createPopperContext, createPopperScope] = createContextScope(POPPER_NAME);\n\ntype PopperContextValue = {\n  anchor: Measurable | null;\n  onAnchorChange(anchor: Measurable | null): void;\n};\nconst [PopperProvider, usePopperContext] = createPopperContext<PopperContextValue>(POPPER_NAME);\n\ninterface PopperProps {\n  children?: React.ReactNode;\n}\nconst Popper: React.FC<PopperProps> = (props: ScopedProps<PopperProps>) => {\n  const { __scopePopper, children } = props;\n  const [anchor, setAnchor] = React.useState<Measurable | null>(null);\n  return (\n    <PopperProvider scope={__scopePopper} anchor={anchor} onAnchorChange={setAnchor}>\n      {children}\n    </PopperProvider>\n  );\n};\n\nPopper.displayName = POPPER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperAnchor\n * -----------------------------------------------------------------------------------------------*/\n\nconst ANCHOR_NAME = 'PopperAnchor';\n\ntype PopperAnchorElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface PopperAnchorProps extends PrimitiveDivProps {\n  virtualRef?: React.RefObject<Measurable>;\n}\n\nconst PopperAnchor = React.forwardRef<PopperAnchorElement, PopperAnchorProps>(\n  (props: ScopedProps<PopperAnchorProps>, forwardedRef) => {\n    const { __scopePopper, virtualRef, ...anchorProps } = props;\n    const context = usePopperContext(ANCHOR_NAME, __scopePopper);\n    const ref = React.useRef<PopperAnchorElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n\n    React.useEffect(() => {\n      // Consumer can anchor the popper to something that isn't\n      // a DOM node e.g. pointer position, so we override the\n      // `anchorRef` with their virtual ref in this case.\n      context.onAnchorChange(virtualRef?.current || ref.current);\n    });\n\n    return virtualRef ? null : <Primitive.div {...anchorProps} ref={composedRefs} />;\n  }\n);\n\nPopperAnchor.displayName = ANCHOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'PopperContent';\n\ntype PopperContentContextValue = {\n  arrowStyles: React.CSSProperties;\n  onArrowChange(arrow: HTMLSpanElement | null): void;\n  onArrowOffsetChange(offset?: number): void;\n};\n\nconst [PopperContentProvider, useContentContext] =\n  createPopperContext<PopperContentContextValue>(CONTENT_NAME);\n\ntype PopperContentElement = React.ElementRef<typeof Primitive.div>;\ninterface PopperContentProps extends PrimitiveDivProps {\n  side?: Side;\n  sideOffset?: number;\n  align?: Align;\n  alignOffset?: number;\n  collisionTolerance?: number;\n  avoidCollisions?: boolean;\n}\n\nconst PopperContent = React.forwardRef<PopperContentElement, PopperContentProps>(\n  (props: ScopedProps<PopperContentProps>, forwardedRef) => {\n    const {\n      __scopePopper,\n      side = 'bottom',\n      sideOffset,\n      align = 'center',\n      alignOffset,\n      collisionTolerance,\n      avoidCollisions = true,\n      ...contentProps\n    } = props;\n\n    const context = usePopperContext(CONTENT_NAME, __scopePopper);\n    const [arrowOffset, setArrowOffset] = React.useState<number>();\n    const anchorRect = useRect(context.anchor);\n    const [content, setContent] = React.useState<HTMLDivElement | null>(null);\n    const contentSize = useSize(content);\n    const [arrow, setArrow] = React.useState<HTMLSpanElement | null>(null);\n    const arrowSize = useSize(arrow);\n\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setContent(node));\n\n    const windowSize = useWindowSize();\n    const collisionBoundariesRect = windowSize\n      ? DOMRect.fromRect({ ...windowSize, x: 0, y: 0 })\n      : undefined;\n\n    const { popperStyles, arrowStyles, placedSide, placedAlign } = getPlacementData({\n      anchorRect,\n      popperSize: contentSize,\n      arrowSize,\n\n      // config\n      arrowOffset,\n      side,\n      sideOffset,\n      align,\n      alignOffset,\n      shouldAvoidCollisions: avoidCollisions,\n      collisionBoundariesRect,\n      collisionTolerance,\n    });\n    const isPlaced = placedSide !== undefined;\n\n    return (\n      <div style={popperStyles} data-radix-popper-content-wrapper=\"\">\n        <PopperContentProvider\n          scope={__scopePopper}\n          arrowStyles={arrowStyles}\n          onArrowChange={setArrow}\n          onArrowOffsetChange={setArrowOffset}\n        >\n          <Primitive.div\n            data-side={placedSide}\n            data-align={placedAlign}\n            {...contentProps}\n            style={{\n              ...contentProps.style,\n              // if the PopperContent hasn't been placed yet (not all measurements done)\n              // we prevent animations so that users's animation don't kick in too early referring wrong sides\n              animation: !isPlaced ? 'none' : undefined,\n            }}\n            ref={composedRefs}\n          />\n        </PopperContentProvider>\n      </div>\n    );\n  }\n);\n\nPopperContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'PopperArrow';\n\ntype PopperArrowElement = React.ElementRef<typeof ArrowPrimitive.Root>;\ntype ArrowProps = Radix.ComponentPropsWithoutRef<typeof ArrowPrimitive.Root>;\ninterface PopperArrowProps extends ArrowProps {\n  offset?: number;\n}\n\nconst PopperArrow = React.forwardRef<PopperArrowElement, PopperArrowProps>(function PopperArrow(\n  props: ScopedProps<PopperArrowProps>,\n  forwardedRef\n) {\n  const { __scopePopper, offset, ...arrowProps } = props;\n  const context = useContentContext(ARROW_NAME, __scopePopper);\n  const { onArrowOffsetChange } = context;\n\n  // send the Arrow's offset up to Popper\n  React.useEffect(() => onArrowOffsetChange(offset), [onArrowOffsetChange, offset]);\n\n  return (\n    <span style={{ ...context.arrowStyles, pointerEvents: 'none' }}>\n      <span\n        // we have to use an extra wrapper because `ResizeObserver` (used by `useSize`)\n        // doesn't report size as we'd expect on SVG elements.\n        // it reports their bounding box which is effectively the largest path inside the SVG.\n        ref={context.onArrowChange}\n        style={{\n          display: 'inline-block',\n          verticalAlign: 'top',\n          pointerEvents: 'auto',\n        }}\n      >\n        <ArrowPrimitive.Root\n          {...arrowProps}\n          ref={forwardedRef}\n          style={{\n            ...arrowProps.style,\n            // ensures the element can be measured correctly (mostly for if SVG)\n            display: 'block',\n          }}\n        />\n      </span>\n    </span>\n  );\n});\n\nPopperArrow.displayName = ARROW_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst WINDOW_RESIZE_DEBOUNCE_WAIT_IN_MS = 100;\n\nfunction useWindowSize() {\n  const [windowSize, setWindowSize] = React.useState<{ width: number; height: number } | undefined>(\n    undefined\n  );\n\n  React.useEffect(() => {\n    let debounceTimerId: number;\n\n    function updateWindowSize() {\n      setWindowSize({ width: window.innerWidth, height: window.innerHeight });\n    }\n\n    function handleResize() {\n      window.clearTimeout(debounceTimerId);\n      debounceTimerId = window.setTimeout(updateWindowSize, WINDOW_RESIZE_DEBOUNCE_WAIT_IN_MS);\n    }\n\n    updateWindowSize();\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowSize;\n}\n\nconst Root = Popper;\nconst Anchor = PopperAnchor;\nconst Content = PopperContent;\nconst Arrow = PopperArrow;\n\nexport {\n  createPopperScope,\n  //\n  Popper,\n  PopperAnchor,\n  PopperContent,\n  PopperArrow,\n  //\n  Root,\n  Anchor,\n  Content,\n  Arrow,\n};\nexport type { PopperProps, PopperAnchorProps, PopperContentProps, PopperArrowProps };\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}