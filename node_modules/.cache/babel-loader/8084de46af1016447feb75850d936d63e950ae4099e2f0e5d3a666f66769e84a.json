{"ast":null,"code":"import _objectWithoutProperties from \"/Users/armenmerikyan/Desktop/wd/tfnlab.com/metagascarnext/stage-presets-gltfjsx/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _objectSpread from \"/Users/armenmerikyan/Desktop/wd/tfnlab.com/metagascarnext/stage-presets-gltfjsx/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _excluded = [\"isChild\", \"object\", \"children\", \"deep\", \"castShadow\", \"receiveShadow\", \"inject\", \"keys\"],\n  _excluded2 = [\"children\"];\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport pick from 'lodash.pick';\nimport { SkeletonUtils } from 'three-stdlib';\nfunction createSpread(child, _ref) {\n  var _ref$keys = _ref.keys,\n    keys = _ref$keys === void 0 ? ['near', 'far', 'color', 'distance', 'decay', 'penumbra', 'angle', 'intensity', 'skeleton', 'visible', 'castShadow', 'receiveShadow', 'morphTargetDictionary', 'morphTargetInfluences', 'name', 'geometry', 'material', 'position', 'rotation', 'scale', 'up', 'userData', 'bindMode', 'bindMatrix', 'bindMatrixInverse', 'skeleton'] : _ref$keys,\n    deep = _ref.deep,\n    inject = _ref.inject,\n    castShadow = _ref.castShadow,\n    receiveShadow = _ref.receiveShadow;\n  var spread = pick(child, keys);\n  if (deep) {\n    if (spread.geometry && deep !== 'materialsOnly') spread.geometry = spread.geometry.clone();\n    if (spread.material && deep !== 'geometriesOnly') spread.material = spread.material.clone();\n  }\n  if (inject) {\n    if (typeof inject === 'function') spread = _objectSpread(_objectSpread({}, spread), {}, {\n      children: inject(child)\n    });else if ( /*#__PURE__*/React.isValidElement(inject)) spread = _objectSpread(_objectSpread({}, spread), {}, {\n      children: inject\n    });else spread = _objectSpread(_objectSpread({}, spread), inject);\n  }\n  if (child instanceof THREE.Mesh) {\n    if (castShadow) spread.castShadow = true;\n    if (receiveShadow) spread.receiveShadow = true;\n  }\n  return spread;\n}\nvar Clone = /*#__PURE__*/React.forwardRef(function (_ref2, forwardRef) {\n  var _ref2$isChild = _ref2.isChild,\n    isChild = _ref2$isChild === void 0 ? false : _ref2$isChild,\n    object = _ref2.object,\n    children = _ref2.children,\n    deep = _ref2.deep,\n    castShadow = _ref2.castShadow,\n    receiveShadow = _ref2.receiveShadow,\n    inject = _ref2.inject,\n    keys = _ref2.keys,\n    props = _objectWithoutProperties(_ref2, _excluded);\n  var _object;\n  var config = {\n    keys: keys,\n    deep: deep,\n    inject: inject,\n    castShadow: castShadow,\n    receiveShadow: receiveShadow\n  };\n  object = React.useMemo(function () {\n    if (isChild === false && !Array.isArray(object)) {\n      var isSkinned = false;\n      object.traverse(function (object) {\n        if (object.isSkinnedMesh) isSkinned = true;\n      });\n      if (isSkinned) return SkeletonUtils.clone(object);\n    }\n    return object;\n  }, [object, isChild]); // Deal with arrayed clones\n\n  if (Array.isArray(object)) {\n    return /*#__PURE__*/React.createElement(\"group\", _extends({}, props, {\n      ref: forwardRef\n    }), object.map(function (o) {\n      return /*#__PURE__*/React.createElement(Clone, _extends({\n        key: o.uuid,\n        object: o\n      }, config));\n    }), children);\n  } // Singleton clones\n\n  var _createSpread = createSpread(object, config),\n    injectChildren = _createSpread.children,\n    spread = _objectWithoutProperties(_createSpread, _excluded2);\n  var Element = object.type[0].toLowerCase() + object.type.slice(1);\n  return /*#__PURE__*/React.createElement(Element, _extends({}, spread, props, {\n    ref: forwardRef\n  }), ((_object = object) == null ? void 0 : _object.children).map(function (child) {\n    if (child.type === 'Bone') return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n      key: child.uuid,\n      object: child\n    }, config));\n    return /*#__PURE__*/React.createElement(Clone, _extends({\n      key: child.uuid,\n      object: child\n    }, config, {\n      isChild: true\n    }));\n  }), children, injectChildren);\n});\nexport { Clone };","map":{"version":3,"names":["_extends","THREE","React","pick","SkeletonUtils","createSpread","child","keys","deep","inject","castShadow","receiveShadow","spread","geometry","clone","material","children","isValidElement","Mesh","Clone","forwardRef","isChild","object","props","_object","config","useMemo","Array","isArray","isSkinned","traverse","isSkinnedMesh","createElement","ref","map","o","key","uuid","injectChildren","Element","type","toLowerCase","slice"],"sources":["/Users/armenmerikyan/Desktop/wd/tfnlab.com/metagascarnext/stage-presets-gltfjsx/node_modules/@react-three/drei/core/Clone.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport pick from 'lodash.pick';\nimport { SkeletonUtils } from 'three-stdlib';\n\nfunction createSpread(child, {\n  keys = ['near', 'far', 'color', 'distance', 'decay', 'penumbra', 'angle', 'intensity', 'skeleton', 'visible', 'castShadow', 'receiveShadow', 'morphTargetDictionary', 'morphTargetInfluences', 'name', 'geometry', 'material', 'position', 'rotation', 'scale', 'up', 'userData', 'bindMode', 'bindMatrix', 'bindMatrixInverse', 'skeleton'],\n  deep,\n  inject,\n  castShadow,\n  receiveShadow\n}) {\n  let spread = pick(child, keys);\n\n  if (deep) {\n    if (spread.geometry && deep !== 'materialsOnly') spread.geometry = spread.geometry.clone();\n    if (spread.material && deep !== 'geometriesOnly') spread.material = spread.material.clone();\n  }\n\n  if (inject) {\n    if (typeof inject === 'function') spread = { ...spread,\n      children: inject(child)\n    };else if ( /*#__PURE__*/React.isValidElement(inject)) spread = { ...spread,\n      children: inject\n    };else spread = { ...spread,\n      ...inject\n    };\n  }\n\n  if (child instanceof THREE.Mesh) {\n    if (castShadow) spread.castShadow = true;\n    if (receiveShadow) spread.receiveShadow = true;\n  }\n\n  return spread;\n}\n\nconst Clone = /*#__PURE__*/React.forwardRef(({\n  isChild = false,\n  object,\n  children,\n  deep,\n  castShadow,\n  receiveShadow,\n  inject,\n  keys,\n  ...props\n}, forwardRef) => {\n  var _object;\n\n  const config = {\n    keys,\n    deep,\n    inject,\n    castShadow,\n    receiveShadow\n  };\n  object = React.useMemo(() => {\n    if (isChild === false && !Array.isArray(object)) {\n      let isSkinned = false;\n      object.traverse(object => {\n        if (object.isSkinnedMesh) isSkinned = true;\n      });\n      if (isSkinned) return SkeletonUtils.clone(object);\n    }\n\n    return object;\n  }, [object, isChild]); // Deal with arrayed clones\n\n  if (Array.isArray(object)) {\n    return /*#__PURE__*/React.createElement(\"group\", _extends({}, props, {\n      ref: forwardRef\n    }), object.map(o => /*#__PURE__*/React.createElement(Clone, _extends({\n      key: o.uuid,\n      object: o\n    }, config))), children);\n  } // Singleton clones\n\n\n  const {\n    children: injectChildren,\n    ...spread\n  } = createSpread(object, config);\n  const Element = object.type[0].toLowerCase() + object.type.slice(1);\n  return /*#__PURE__*/React.createElement(Element, _extends({}, spread, props, {\n    ref: forwardRef\n  }), ((_object = object) == null ? void 0 : _object.children).map(child => {\n    if (child.type === 'Bone') return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n      key: child.uuid,\n      object: child\n    }, config));\n    return /*#__PURE__*/React.createElement(Clone, _extends({\n      key: child.uuid,\n      object: child\n    }, config, {\n      isChild: true\n    }));\n  }), children, injectChildren);\n});\n\nexport { Clone };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}