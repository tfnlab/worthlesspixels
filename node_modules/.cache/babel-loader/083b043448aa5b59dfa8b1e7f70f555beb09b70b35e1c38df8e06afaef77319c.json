{"ast":null,"code":"import _toConsumableArray from \"/Users/armenmerikyan/Desktop/wd/tfnlab.com/metagascarnext/stage-presets-gltfjsx/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _defineProperty from \"/Users/armenmerikyan/Desktop/wd/tfnlab.com/metagascarnext/stage-presets-gltfjsx/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/Users/armenmerikyan/Desktop/wd/tfnlab.com/metagascarnext/stage-presets-gltfjsx/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/armenmerikyan/Desktop/wd/tfnlab.com/metagascarnext/stage-presets-gltfjsx/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"children\"],\n  _excluded2 = [\"scope\", \"children\"];\nimport * as e from \"react\";\nexport function createContext(t, n) {\n  var o = /*#__PURE__*/e.createContext(n);\n  function r(t) {\n    var n = t.children,\n      r = _objectWithoutProperties(t, _excluded),\n      c = e.useMemo(function () {\n        return r;\n      }, Object.values(r)); /*#__PURE__*/\n    return e.createElement(o.Provider, {\n      value: c\n    }, n);\n  }\n  return r.displayName = t + \"Provider\", [r, function (r) {\n    var c = e.useContext(o);\n    if (c) return c;\n    if (void 0 !== n) return n;\n    throw new Error(\"`\".concat(r, \"` must be used within `\").concat(t, \"`\"));\n  }];\n}\nexport function createContextScope(n) {\n  var o = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var r = [];\n  var c = function c() {\n    var t = r.map(function (t) {\n      return /*#__PURE__*/e.createContext(t);\n    });\n    return function (o) {\n      var r = (null == o ? void 0 : o[n]) || t;\n      return e.useMemo(function () {\n        return _defineProperty({}, \"__scope\".concat(n), _objectSpread(_objectSpread({}, o), {}, _defineProperty({}, n, r)));\n      }, [o, r]);\n    };\n  };\n  return c.scopeName = n, [function (t, o) {\n    var c = /*#__PURE__*/e.createContext(o),\n      u = r.length;\n    function s(t) {\n      var o = t.scope,\n        r = t.children,\n        s = _objectWithoutProperties(t, _excluded2),\n        i = (null == o ? void 0 : o[n][u]) || c,\n        a = e.useMemo(function () {\n          return s;\n        }, Object.values(s)); /*#__PURE__*/\n      return e.createElement(i.Provider, {\n        value: a\n      }, r);\n    }\n    return r = [].concat(_toConsumableArray(r), [o]), s.displayName = t + \"Provider\", [s, function (r, s) {\n      var i = (null == s ? void 0 : s[n][u]) || c,\n        a = e.useContext(i);\n      if (a) return a;\n      if (void 0 !== o) return o;\n      throw new Error(\"`\".concat(r, \"` must be used within `\").concat(t, \"`\"));\n    }];\n  }, t.apply(void 0, [c].concat(_toConsumableArray(o)))];\n}\nfunction t() {\n  for (var _len = arguments.length, t = new Array(_len), _key = 0; _key < _len; _key++) {\n    t[_key] = arguments[_key];\n  }\n  var n = t[0];\n  if (1 === t.length) return n;\n  var o = function o() {\n    var o = t.map(function (e) {\n      return {\n        useScope: e(),\n        scopeName: e.scopeName\n      };\n    });\n    return function (t) {\n      var r = o.reduce(function (e, _ref2) {\n        var n = _ref2.useScope,\n          o = _ref2.scopeName;\n        return _objectSpread(_objectSpread({}, e), n(t)[\"__scope\".concat(o)]);\n      }, {});\n      return e.useMemo(function () {\n        return _defineProperty({}, \"__scope\".concat(n.scopeName), r);\n      }, [r]);\n    };\n  };\n  return o.scopeName = n.scopeName, o;\n}","map":{"version":3,"mappings":";;;;;;;OAEA,SAASA,cACPC,GACAC;EAEA,IAAMC,iBAAUC,EAAMJ,cAA4CE;EAElE,SAASG,EAASC;IAChB,IAAQC,IAAyBD,EAA3BC;MAAeC,6BAAYF;MAG3BG,IAAQL,EAAMM,QAAQ;QAAA,OAAMF;MAAAA,GAASG,OAAOC,OAAOJ;IACzD,OAAOK,gBAACV,EAAQE,UAAT;MAAkBI,OAAOA;IAAAA,GAAQF;EAAAA;EAY1C,OADAF,EAASS,cAAcb,IAAoB,YACpC,CAACI,GATR,UAAoBU;IAClB,IAAMP,IAAUJ,EAAMY,WAAWb;IACjC,IAAIK,GAAS,OAAOA;IACpB,SAAuBS,MAAnBf,GAA8B,OAAOA;IAEzC,MAAM,IAAIgB,iBAAWH,qCAAwCd;EAAAA;AAAAA;AAAAA,OAkBjE,SAASkB,mBAAmBC,GAA2D;EAAA,IAAxCC,wEAAwC;EACrF,IAAIC,IAAyB;EA0C7B,IAAMC,IAA2B,SAA3BA,IAA2B;IAC/B,IAAMC,IAAgBF,EAAgBG,IAAKvB;MAAAA,oBAClCE,EAAMJ,cAAcE;IAAAA;IAE7B,OAAO,UAAkBwB;MACvB,IAAMC,KAAWD,uBAAQN,OAAcI;MACvC,OAAOpB,EAAMM,QACX;QAAA,4CAAoBU,oCAAmBM,4BAAQN,GAAYO;MAAAA,GAC3D,CAACD,GAAOC;IAAAA;EAAAA;EAMd,OADAJ,EAAYH,YAAYA,GACjB,CAlDP,UACEnB,GACAC;IAEA,IAAM0B,iBAAcxB,EAAMJ,cAA4CE;MAChE2B,IAAQP,EAAgBQ;IAG9B,SAASzB,EACPC;MAEA,IAAQoB,IAAgCpB,EAAlCoB;QAASnB,IAAyBD,EAAlCC;QAAsBC,6BAAYF;QAClCH,KAAUuB,uBAAQN,GAAWS,OAAUD;QAGvCnB,IAAQL,EAAMM,QAAQ;UAAA,OAAMF;QAAAA,GAASG,OAAOC,OAAOJ;MACzD,OAAOK,gBAACV,EAAQE,UAAT;QAAkBI,OAAOA;MAAAA,GAAQF;IAAAA;IAa1C,OAvBAe,iCAAsBA,KAAiBpB,KAsBvCG,EAASS,cAAcb,IAAoB,YACpC,CAACI,GAVR,UAAoBU,GAAsBW;MACxC,IAAMvB,KAAUuB,uBAAQN,GAAWS,OAAUD;QACvCpB,IAAUJ,EAAMY,WAAWb;MACjC,IAAIK,GAAS,OAAOA;MACpB,SAAuBS,MAAnBf,GAA8B,OAAOA;MAEzC,MAAM,IAAIgB,iBAAWH,qCAAwCd;IAAAA;EAAAA,GAyB1C8B,iBAAqBR,6BAAgBF;AAAAA;AAO9D,SAASU,IAAwBC;EAAAA;IAAAA;EAAAA;EAC/B,IAAMC,IAAYD,EAAO;EACzB,IAAsB,MAAlBA,EAAOF,QAAc,OAAOG;EAEhC,IAAMV,IAA2B;IAC/B,IAAMW,IAAaF,EAAOP,IAAKF;MAAAA,OAAD;QAC5BY,UAAUZ;QACVH,WAAWG,EAAYH;MAAAA;IAAAA;IAGzB,OAAO,UAA2BgB;MAChC,IAAMC,IAAaH,EAAWI,OAAO,UAACD;QAAAA,IAAcF;UAAUf;QAAAA,uCAMhDiB,IAFOF,EAASC,oBACchB;MAAAA,GAEzC;MAEH,OAAOhB,EAAMM,QAAQ;QAAA,4CAAoBuB,EAAUb,YAAciB;MAAAA,GAAe,CAACA;IAAAA;EAAAA;EAKrF,OADAd,EAAYH,YAAYa,EAAUb,WAC3BG;AAAAA","names":["createContext","rootComponentName","defaultContext","Context","React","Provider","props","children","context","value","useMemo","Object","values","_react","displayName","consumerName","useContext","undefined","Error","createContextScope","scopeName","createContextScopeDeps","defaultContexts","createScope","scopeContexts","map","scope","contexts","BaseContext","index","length","composeContextScopes","scopes","baseScope","scopeHooks","useScope","overrideScopes","nextScopes","reduce"],"sources":["/Users/armenmerikyan/Desktop/wd/tfnlab.com/metagascarnext/stage-presets-gltfjsx/node_modules/leva/node_modules/@radix-ui/react-tooltip/node_modules/@radix-ui/react-context/dist/packages/react/context/src/createContext.tsx"],"sourcesContent":["import * as React from 'react';\n\nfunction createContext<ContextValueType extends object | null>(\n  rootComponentName: string,\n  defaultContext?: ContextValueType\n) {\n  const Context = React.createContext<ContextValueType | undefined>(defaultContext);\n\n  function Provider(props: ContextValueType & { children: React.ReactNode }) {\n    const { children, ...context } = props;\n    // Only re-memoize when prop values change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const value = React.useMemo(() => context, Object.values(context)) as ContextValueType;\n    return <Context.Provider value={value}>{children}</Context.Provider>;\n  }\n\n  function useContext(consumerName: string) {\n    const context = React.useContext(Context);\n    if (context) return context;\n    if (defaultContext !== undefined) return defaultContext;\n    // if a defaultContext wasn't specified, it's a required context.\n    throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n  }\n\n  Provider.displayName = rootComponentName + 'Provider';\n  return [Provider, useContext] as const;\n}\n\n/* -------------------------------------------------------------------------------------------------\n * createContextScope\n * -----------------------------------------------------------------------------------------------*/\n\ntype Scope<C = any> = { [scopeName: string]: React.Context<C>[] } | undefined;\ntype ScopeHook = (scope: Scope) => { [__scopeProp: string]: Scope };\ninterface CreateScope {\n  scopeName: string;\n  (): ScopeHook;\n}\n\nfunction createContextScope(scopeName: string, createContextScopeDeps: CreateScope[] = []) {\n  let defaultContexts: any[] = [];\n\n  /* -----------------------------------------------------------------------------------------------\n   * createContext\n   * ---------------------------------------------------------------------------------------------*/\n\n  function createContext<ContextValueType extends object | null>(\n    rootComponentName: string,\n    defaultContext?: ContextValueType\n  ) {\n    const BaseContext = React.createContext<ContextValueType | undefined>(defaultContext);\n    const index = defaultContexts.length;\n    defaultContexts = [...defaultContexts, defaultContext];\n\n    function Provider(\n      props: ContextValueType & { scope: Scope<ContextValueType>; children: React.ReactNode }\n    ) {\n      const { scope, children, ...context } = props;\n      const Context = scope?.[scopeName][index] || BaseContext;\n      // Only re-memoize when prop values change\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      const value = React.useMemo(() => context, Object.values(context)) as ContextValueType;\n      return <Context.Provider value={value}>{children}</Context.Provider>;\n    }\n\n    function useContext(consumerName: string, scope: Scope<ContextValueType | undefined>) {\n      const Context = scope?.[scopeName][index] || BaseContext;\n      const context = React.useContext(Context);\n      if (context) return context;\n      if (defaultContext !== undefined) return defaultContext;\n      // if a defaultContext wasn't specified, it's a required context.\n      throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n    }\n\n    Provider.displayName = rootComponentName + 'Provider';\n    return [Provider, useContext] as const;\n  }\n\n  /* -----------------------------------------------------------------------------------------------\n   * createScope\n   * ---------------------------------------------------------------------------------------------*/\n\n  const createScope: CreateScope = () => {\n    const scopeContexts = defaultContexts.map((defaultContext) => {\n      return React.createContext(defaultContext);\n    });\n    return function useScope(scope: Scope) {\n      const contexts = scope?.[scopeName] || scopeContexts;\n      return React.useMemo(\n        () => ({ [`__scope${scopeName}`]: { ...scope, [scopeName]: contexts } }),\n        [scope, contexts]\n      );\n    };\n  };\n\n  createScope.scopeName = scopeName;\n  return [createContext, composeContextScopes(createScope, ...createContextScopeDeps)] as const;\n}\n\n/* -------------------------------------------------------------------------------------------------\n * composeContextScopes\n * -----------------------------------------------------------------------------------------------*/\n\nfunction composeContextScopes(...scopes: CreateScope[]) {\n  const baseScope = scopes[0];\n  if (scopes.length === 1) return baseScope;\n\n  const createScope: CreateScope = () => {\n    const scopeHooks = scopes.map((createScope) => ({\n      useScope: createScope(),\n      scopeName: createScope.scopeName,\n    }));\n\n    return function useComposedScopes(overrideScopes) {\n      const nextScopes = scopeHooks.reduce((nextScopes, { useScope, scopeName }) => {\n        // We are calling a hook inside a callback which React warns against to avoid inconsistent\n        // renders, however, scoping doesn't have render side effects so we ignore the rule.\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const scopeProps = useScope(overrideScopes);\n        const currentScope = scopeProps[`__scope${scopeName}`];\n        return { ...nextScopes, ...currentScope };\n      }, {});\n\n      return React.useMemo(() => ({ [`__scope${baseScope.scopeName}`]: nextScopes }), [nextScopes]);\n    };\n  };\n\n  createScope.scopeName = baseScope.scopeName;\n  return createScope;\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nexport { createContext, createContextScope };\nexport type { CreateScope, Scope };\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}