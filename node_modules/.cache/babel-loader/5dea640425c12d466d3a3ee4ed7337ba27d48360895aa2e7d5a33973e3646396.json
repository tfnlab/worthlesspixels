{"ast":null,"code":"import * as e from \"react\";\nexport function useCallbackRef(r) {\n  var t = e.useRef(r);\n  return e.useEffect(function () {\n    t.current = r;\n  }), e.useMemo(function () {\n    return function () {\n      var _r;\n      var r;\n      for (var _len = arguments.length, e = new Array(_len), _key = 0; _key < _len; _key++) {\n        e[_key] = arguments[_key];\n      }\n      return null === (r = t.current) || void 0 === r ? void 0 : (_r = r).call.apply(_r, [t].concat(e));\n    };\n  }, []);\n}","map":{"version":3,"mappings":";OAMA,SAASA,eAAkDC;EACzD,IAAMC,IAAcC,EAAMC,OAAOH;EAOjC,OALAE,EAAME,UAAU;IACdH,EAAYI,UAAUL;EAAAA,IAIjBE,EAAMI,QAAQ;IAAA,OAAO,YAAIC;MAAAA;MAAJ;MAAA,kCAAIA;QAAAA;MAAAA;MAAJ,qBAAaN,EAAYI,iBAAzB,mBAAaG,mCAAyBD;IAAAA;EAAAA,GAAa;AAAA","names":["useCallbackRef","callback","callbackRef","React","useRef","useEffect","current","useMemo","args","_callbackRef$current"],"sources":["/Users/armenmerikyan/Desktop/wd/tfnlab.com/metagascarnext/stage-presets-gltfjsx/node_modules/leva/node_modules/@radix-ui/react-tooltip/node_modules/@radix-ui/react-use-escape-keydown/node_modules/@radix-ui/react-use-callback-ref/dist/packages/react/use-callback-ref/src/useCallbackRef.tsx"],"sourcesContent":["import * as React from 'react';\n\n/**\n * A custom hook that converts a callback to a ref to avoid triggering re-renders when passed as a\n * prop or avoid re-executing effects when passed as a dependency\n */\nfunction useCallbackRef<T extends (...args: any[]) => any>(callback: T | undefined): T {\n  const callbackRef = React.useRef(callback);\n\n  React.useEffect(() => {\n    callbackRef.current = callback;\n  });\n\n  // https://github.com/facebook/react/issues/19240\n  return React.useMemo(() => ((...args) => callbackRef.current?.(...args)) as T, []);\n}\n\nexport { useCallbackRef };\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}