{"ast":null,"code":"import { a as _toConsumableArray } from './triangle-b62b9067.esm.js';\nimport { Color, Vector3, Quaternion, Vector2, Vector4, Euler, Spherical, Matrix4 } from 'three';\nimport { d as deltaAngle } from './misc-7d870b3c.esm.js';\n\n/**\n * Rounded square wave easing\n */\n\nvar rsqw = function rsqw(t) {\n  var delta = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.01;\n  var a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var f = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1 / (2 * Math.PI);\n  return a / Math.atan(1 / delta) * Math.atan(Math.sin(2 * Math.PI * t * f) / delta);\n};\n/**\n * Exponential easing\n */\n\nvar exp = function exp(t) {\n  return 1 / (1 + t + 0.48 * t * t + 0.235 * t * t * t);\n};\n/**\n * Damp, based on Game Programming Gems 4 Chapter 1.10\n */\n\nfunction damp( /** The object */\ncurrent, /** The key to animate */\nprop, /** To goal value */\ntarget) {\n  var smoothTime = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0.25;\n  var delta = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0.01;\n  var maxSpeed = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : Infinity;\n  var easing = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : exp;\n  var eps = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 0.001;\n  var vel = \"velocity_\" + prop;\n  if (current.__damp === undefined) current.__damp = {};\n  if (current.__damp[vel] === undefined) current.__damp[vel] = 0;\n  if (Math.abs(current[prop] - target) <= eps) {\n    current[prop] = target;\n    return false;\n  }\n  smoothTime = Math.max(0.0001, smoothTime);\n  var omega = 2 / smoothTime;\n  var t = easing(omega * delta);\n  var change = current[prop] - target;\n  var originalTo = target; // Clamp maximum maxSpeed\n\n  var maxChange = maxSpeed * smoothTime;\n  change = Math.min(Math.max(change, -maxChange), maxChange);\n  target = current[prop] - change;\n  var temp = (current.__damp[vel] + omega * change) * delta;\n  current.__damp[vel] = (current.__damp[vel] - omega * temp) * t;\n  var output = target + (change + temp) * t; // Prevent overshooting\n\n  if (originalTo - current[prop] > 0.0 === output > originalTo) {\n    output = originalTo;\n    current.__damp[vel] = (output - originalTo) / delta;\n  }\n  current[prop] = output;\n  return true;\n}\n/**\n * DampAngle, based on Game Programming Gems 4 Chapter 1.10\n */\n\nfunction dampAngle(current, prop, target, smoothTime, delta, maxSpeed, easing, eps) {\n  return damp(current, prop, current[prop] + deltaAngle(current[prop], target), smoothTime, delta, maxSpeed, easing, eps);\n}\nvar a, b, c, d;\n/**\n * Vector2D Damp\n */\n\nvar v2d = /*@__PURE__*/new Vector2();\nfunction damp2(current, target, smoothTime, delta, maxSpeed, easing, eps) {\n  if (typeof target === \"number\") v2d.setScalar(target);else if (Array.isArray(target)) v2d.set(target[0], target[1]);else v2d.copy(target);\n  a = damp(current, \"x\", v2d.x, smoothTime, delta, maxSpeed, easing, eps);\n  b = damp(current, \"y\", v2d.y, smoothTime, delta, maxSpeed, easing, eps);\n  return a || b;\n}\n/**\n * Vector3D Damp\n */\n\nvar v3d = /*@__PURE__*/new Vector3();\nfunction damp3(current, target, smoothTime, delta, maxSpeed, easing, eps) {\n  if (typeof target === \"number\") v3d.setScalar(target);else if (Array.isArray(target)) v3d.set(target[0], target[1], target[2]);else v3d.copy(target);\n  a = damp(current, \"x\", v3d.x, smoothTime, delta, maxSpeed, easing, eps);\n  b = damp(current, \"y\", v3d.y, smoothTime, delta, maxSpeed, easing, eps);\n  c = damp(current, \"z\", v3d.z, smoothTime, delta, maxSpeed, easing, eps);\n  return a || b || c;\n}\n/**\n * Vector4D Damp\n */\n\nvar v4d = /*@__PURE__*/new Vector4();\nfunction damp4(current, target, smoothTime, delta, maxSpeed, easing, eps) {\n  if (typeof target === \"number\") v4d.setScalar(target);else if (Array.isArray(target)) v4d.set(target[0], target[1], target[2], target[3]);else v4d.copy(target);\n  a = damp(current, \"x\", v3d.x, smoothTime, delta, maxSpeed, easing, eps);\n  b = damp(current, \"y\", v3d.y, smoothTime, delta, maxSpeed, easing, eps);\n  c = damp(current, \"z\", v3d.z, smoothTime, delta, maxSpeed, easing, eps);\n  return a || b || c;\n}\n/**\n * Euler Damp\n */\n\nvar rot = /*@__PURE__*/new Euler();\nfunction dampE(current, target, smoothTime, delta, maxSpeed, easing, eps) {\n  if (Array.isArray(target)) rot.set(target[0], target[1], target[2], target[3]);else rot.copy(target);\n  a = dampAngle(current, \"x\", rot.x, smoothTime, delta, maxSpeed, easing, eps);\n  b = dampAngle(current, \"y\", rot.y, smoothTime, delta, maxSpeed, easing, eps);\n  c = dampAngle(current, \"z\", rot.z, smoothTime, delta, maxSpeed, easing, eps);\n  return a || b || c;\n}\n/**\n * Color Damp\n */\n\nvar col = /*@__PURE__*/new Color();\nfunction dampC(current, target, smoothTime, delta, maxSpeed, easing, eps) {\n  if (target instanceof Color) col.copy(target);else if (Array.isArray(target)) col.setRGB(target[0], target[1], target[2]);else col.set(target);\n  a = damp(current, \"r\", col.r, smoothTime, delta, maxSpeed, easing, eps);\n  b = damp(current, \"g\", col.g, smoothTime, delta, maxSpeed, easing, eps);\n  c = damp(current, \"b\", col.b, smoothTime, delta, maxSpeed, easing, eps);\n  return a || b || c;\n}\n/**\n * Quaternion Damp\n * https://gist.github.com/maxattack/4c7b4de00f5c1b95a33b\n * Copyright 2016 Max Kaufmann (max.kaufmann@gmail.com)\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nvar qt = /*@__PURE__*/new Quaternion();\nvar v4result = /*@__PURE__*/new Vector4();\nvar v4velocity = /*@__PURE__*/new Vector4();\nvar v4error = /*@__PURE__*/new Vector4();\nfunction dampQ(current, target, smoothTime, delta, maxSpeed, easing, eps) {\n  var cur = current;\n  if (Array.isArray(target)) qt.set(target[0], target[1], target[2], target[3]);else qt.copy(target);\n  var multi = current.dot(qt) > 0 ? 1 : -1;\n  qt.x *= multi;\n  qt.y *= multi;\n  qt.z *= multi;\n  qt.w *= multi;\n  a = damp(current, \"x\", qt.x, smoothTime, delta, maxSpeed, easing, eps);\n  b = damp(current, \"y\", qt.y, smoothTime, delta, maxSpeed, easing, eps);\n  c = damp(current, \"z\", qt.z, smoothTime, delta, maxSpeed, easing, eps);\n  d = damp(current, \"w\", qt.w, smoothTime, delta, maxSpeed, easing, eps); // smooth damp (nlerp approx)\n\n  v4result.set(current.x, current.y, current.z, current.w).normalize();\n  v4velocity.set(cur.__damp.velocity_x, cur.__damp.velocity_y, cur.__damp.velocity_z, cur.__damp.velocity_w); // ensure deriv is tangent\n\n  v4error.copy(v4result).multiplyScalar(v4velocity.dot(v4result) / v4result.dot(v4result));\n  cur.__damp.velocity_x -= v4error.x;\n  cur.__damp.velocity_y -= v4error.y;\n  cur.__damp.velocity_z -= v4error.z;\n  cur.__damp.velocity_w -= v4error.w;\n  current.set(v4result.x, v4result.y, v4result.z, v4result.w);\n  return a || b || c || d;\n}\n/**\n * Spherical Damp\n */\n\nvar spherical = /*@__PURE__*/new Spherical();\nfunction dampS(current, target, smoothTime, delta, maxSpeed, easing, eps) {\n  if (Array.isArray(target)) spherical.set(target[0], target[1], target[2]);else spherical.copy(target);\n  a = damp(current, \"radius\", spherical.radius, smoothTime, delta, maxSpeed, easing, eps);\n  b = dampAngle(current, \"phi\", spherical.phi, smoothTime, delta, maxSpeed, easing, eps);\n  c = dampAngle(current, \"theta\", spherical.theta, smoothTime, delta, maxSpeed, easing, eps);\n  return a || b || c;\n}\n/**\n * Matrix4 Damp\n */\n\nvar mat = /*@__PURE__*/new Matrix4();\nvar mPos = /*@__PURE__*/new Vector3();\nvar mRot = /*@__PURE__*/new Quaternion();\nvar mSca = /*@__PURE__*/new Vector3();\nfunction dampM(current, target, smoothTime, delta, maxSpeed, easing, eps) {\n  var cur = current;\n  if (cur.__damp === undefined) {\n    cur.__damp = {\n      position: new Vector3(),\n      rotation: new Quaternion(),\n      scale: new Vector3()\n    };\n    current.decompose(cur.__damp.position, cur.__damp.rotation, cur.__damp.scale);\n  }\n  if (Array.isArray(target)) mat.set.apply(mat, _toConsumableArray(target));else mat.copy(target);\n  mat.decompose(mPos, mRot, mSca);\n  a = damp3(cur.__damp.position, mPos, smoothTime, delta, maxSpeed, easing, eps);\n  b = dampQ(cur.__damp.rotation, mRot, smoothTime, delta, maxSpeed, easing, eps);\n  c = damp3(cur.__damp.scale, mSca, smoothTime, delta, maxSpeed, easing, eps);\n  current.compose(cur.__damp.position, cur.__damp.rotation, cur.__damp.scale);\n  return a || b || c;\n}\nvar easing = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  rsqw: rsqw,\n  exp: exp,\n  damp: damp,\n  dampAngle: dampAngle,\n  damp2: damp2,\n  damp3: damp3,\n  damp4: damp4,\n  dampE: dampE,\n  dampC: dampC,\n  dampQ: dampQ,\n  dampS: dampS,\n  dampM: dampM\n});\nexport { exp as a, dampAngle as b, damp2 as c, damp as d, easing as e, damp3 as f, damp4 as g, dampE as h, dampC as i, dampQ as j, dampS as k, dampM as l, rsqw as r };","map":{"version":3,"names":["a","_toConsumableArray","Color","Vector3","Quaternion","Vector2","Vector4","Euler","Spherical","Matrix4","d","deltaAngle","rsqw","t","delta","arguments","length","undefined","f","Math","PI","atan","sin","exp","damp","current","prop","target","smoothTime","maxSpeed","Infinity","easing","eps","vel","__damp","abs","max","omega","change","originalTo","maxChange","min","temp","output","dampAngle","b","c","v2d","damp2","setScalar","Array","isArray","set","copy","x","y","v3d","damp3","z","v4d","damp4","rot","dampE","col","dampC","setRGB","r","g","qt","v4result","v4velocity","v4error","dampQ","cur","multi","dot","w","normalize","velocity_x","velocity_y","velocity_z","velocity_w","multiplyScalar","spherical","dampS","radius","phi","theta","mat","mPos","mRot","mSca","dampM","position","rotation","scale","decompose","apply","compose","Object","freeze","__proto__","e","h","i","j","k","l"],"sources":["/Users/armenmerikyan/Desktop/wd/tfnlab.com/metagascarnext/stage-presets-gltfjsx/node_modules/@react-three/drei/node_modules/maath/dist/easing-6b863318.esm.js"],"sourcesContent":["import { a as _toConsumableArray } from './triangle-b62b9067.esm.js';\nimport { Color, Vector3, Quaternion, Vector2, Vector4, Euler, Spherical, Matrix4 } from 'three';\nimport { d as deltaAngle } from './misc-7d870b3c.esm.js';\n\n/**\n * Rounded square wave easing\n */\n\nvar rsqw = function rsqw(t) {\n  var delta = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.01;\n  var a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var f = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1 / (2 * Math.PI);\n  return a / Math.atan(1 / delta) * Math.atan(Math.sin(2 * Math.PI * t * f) / delta);\n};\n/**\n * Exponential easing\n */\n\nvar exp = function exp(t) {\n  return 1 / (1 + t + 0.48 * t * t + 0.235 * t * t * t);\n};\n/**\n * Damp, based on Game Programming Gems 4 Chapter 1.10\n */\n\nfunction damp(\n/** The object */\ncurrent,\n/** The key to animate */\nprop,\n/** To goal value */\ntarget) {\n  var smoothTime = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0.25;\n  var delta = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0.01;\n  var maxSpeed = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : Infinity;\n  var easing = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : exp;\n  var eps = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 0.001;\n  var vel = \"velocity_\" + prop;\n  if (current.__damp === undefined) current.__damp = {};\n  if (current.__damp[vel] === undefined) current.__damp[vel] = 0;\n\n  if (Math.abs(current[prop] - target) <= eps) {\n    current[prop] = target;\n    return false;\n  }\n\n  smoothTime = Math.max(0.0001, smoothTime);\n  var omega = 2 / smoothTime;\n  var t = easing(omega * delta);\n  var change = current[prop] - target;\n  var originalTo = target; // Clamp maximum maxSpeed\n\n  var maxChange = maxSpeed * smoothTime;\n  change = Math.min(Math.max(change, -maxChange), maxChange);\n  target = current[prop] - change;\n  var temp = (current.__damp[vel] + omega * change) * delta;\n  current.__damp[vel] = (current.__damp[vel] - omega * temp) * t;\n  var output = target + (change + temp) * t; // Prevent overshooting\n\n  if (originalTo - current[prop] > 0.0 === output > originalTo) {\n    output = originalTo;\n    current.__damp[vel] = (output - originalTo) / delta;\n  }\n\n  current[prop] = output;\n  return true;\n}\n/**\n * DampAngle, based on Game Programming Gems 4 Chapter 1.10\n */\n\nfunction dampAngle(current, prop, target, smoothTime, delta, maxSpeed, easing, eps) {\n  return damp(current, prop, current[prop] + deltaAngle(current[prop], target), smoothTime, delta, maxSpeed, easing, eps);\n}\nvar a, b, c, d;\n/**\n * Vector2D Damp\n */\n\nvar v2d = /*@__PURE__*/new Vector2();\nfunction damp2(current, target, smoothTime, delta, maxSpeed, easing, eps) {\n  if (typeof target === \"number\") v2d.setScalar(target);else if (Array.isArray(target)) v2d.set(target[0], target[1]);else v2d.copy(target);\n  a = damp(current, \"x\", v2d.x, smoothTime, delta, maxSpeed, easing, eps);\n  b = damp(current, \"y\", v2d.y, smoothTime, delta, maxSpeed, easing, eps);\n  return a || b;\n}\n/**\n * Vector3D Damp\n */\n\nvar v3d = /*@__PURE__*/new Vector3();\nfunction damp3(current, target, smoothTime, delta, maxSpeed, easing, eps) {\n  if (typeof target === \"number\") v3d.setScalar(target);else if (Array.isArray(target)) v3d.set(target[0], target[1], target[2]);else v3d.copy(target);\n  a = damp(current, \"x\", v3d.x, smoothTime, delta, maxSpeed, easing, eps);\n  b = damp(current, \"y\", v3d.y, smoothTime, delta, maxSpeed, easing, eps);\n  c = damp(current, \"z\", v3d.z, smoothTime, delta, maxSpeed, easing, eps);\n  return a || b || c;\n}\n/**\n * Vector4D Damp\n */\n\nvar v4d = /*@__PURE__*/new Vector4();\nfunction damp4(current, target, smoothTime, delta, maxSpeed, easing, eps) {\n  if (typeof target === \"number\") v4d.setScalar(target);else if (Array.isArray(target)) v4d.set(target[0], target[1], target[2], target[3]);else v4d.copy(target);\n  a = damp(current, \"x\", v3d.x, smoothTime, delta, maxSpeed, easing, eps);\n  b = damp(current, \"y\", v3d.y, smoothTime, delta, maxSpeed, easing, eps);\n  c = damp(current, \"z\", v3d.z, smoothTime, delta, maxSpeed, easing, eps);\n  return a || b || c;\n}\n/**\n * Euler Damp\n */\n\nvar rot = /*@__PURE__*/new Euler();\nfunction dampE(current, target, smoothTime, delta, maxSpeed, easing, eps) {\n  if (Array.isArray(target)) rot.set(target[0], target[1], target[2], target[3]);else rot.copy(target);\n  a = dampAngle(current, \"x\", rot.x, smoothTime, delta, maxSpeed, easing, eps);\n  b = dampAngle(current, \"y\", rot.y, smoothTime, delta, maxSpeed, easing, eps);\n  c = dampAngle(current, \"z\", rot.z, smoothTime, delta, maxSpeed, easing, eps);\n  return a || b || c;\n}\n/**\n * Color Damp\n */\n\nvar col = /*@__PURE__*/new Color();\nfunction dampC(current, target, smoothTime, delta, maxSpeed, easing, eps) {\n  if (target instanceof Color) col.copy(target);else if (Array.isArray(target)) col.setRGB(target[0], target[1], target[2]);else col.set(target);\n  a = damp(current, \"r\", col.r, smoothTime, delta, maxSpeed, easing, eps);\n  b = damp(current, \"g\", col.g, smoothTime, delta, maxSpeed, easing, eps);\n  c = damp(current, \"b\", col.b, smoothTime, delta, maxSpeed, easing, eps);\n  return a || b || c;\n}\n/**\n * Quaternion Damp\n * https://gist.github.com/maxattack/4c7b4de00f5c1b95a33b\n * Copyright 2016 Max Kaufmann (max.kaufmann@gmail.com)\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nvar qt = /*@__PURE__*/new Quaternion();\nvar v4result = /*@__PURE__*/new Vector4();\nvar v4velocity = /*@__PURE__*/new Vector4();\nvar v4error = /*@__PURE__*/new Vector4();\nfunction dampQ(current, target, smoothTime, delta, maxSpeed, easing, eps) {\n  var cur = current;\n  if (Array.isArray(target)) qt.set(target[0], target[1], target[2], target[3]);else qt.copy(target);\n  var multi = current.dot(qt) > 0 ? 1 : -1;\n  qt.x *= multi;\n  qt.y *= multi;\n  qt.z *= multi;\n  qt.w *= multi;\n  a = damp(current, \"x\", qt.x, smoothTime, delta, maxSpeed, easing, eps);\n  b = damp(current, \"y\", qt.y, smoothTime, delta, maxSpeed, easing, eps);\n  c = damp(current, \"z\", qt.z, smoothTime, delta, maxSpeed, easing, eps);\n  d = damp(current, \"w\", qt.w, smoothTime, delta, maxSpeed, easing, eps); // smooth damp (nlerp approx)\n\n  v4result.set(current.x, current.y, current.z, current.w).normalize();\n  v4velocity.set(cur.__damp.velocity_x, cur.__damp.velocity_y, cur.__damp.velocity_z, cur.__damp.velocity_w); // ensure deriv is tangent\n\n  v4error.copy(v4result).multiplyScalar(v4velocity.dot(v4result) / v4result.dot(v4result));\n  cur.__damp.velocity_x -= v4error.x;\n  cur.__damp.velocity_y -= v4error.y;\n  cur.__damp.velocity_z -= v4error.z;\n  cur.__damp.velocity_w -= v4error.w;\n  current.set(v4result.x, v4result.y, v4result.z, v4result.w);\n  return a || b || c || d;\n}\n/**\n * Spherical Damp\n */\n\nvar spherical = /*@__PURE__*/new Spherical();\nfunction dampS(current, target, smoothTime, delta, maxSpeed, easing, eps) {\n  if (Array.isArray(target)) spherical.set(target[0], target[1], target[2]);else spherical.copy(target);\n  a = damp(current, \"radius\", spherical.radius, smoothTime, delta, maxSpeed, easing, eps);\n  b = dampAngle(current, \"phi\", spherical.phi, smoothTime, delta, maxSpeed, easing, eps);\n  c = dampAngle(current, \"theta\", spherical.theta, smoothTime, delta, maxSpeed, easing, eps);\n  return a || b || c;\n}\n/**\n * Matrix4 Damp\n */\n\nvar mat = /*@__PURE__*/new Matrix4();\nvar mPos = /*@__PURE__*/new Vector3();\nvar mRot = /*@__PURE__*/new Quaternion();\nvar mSca = /*@__PURE__*/new Vector3();\nfunction dampM(current, target, smoothTime, delta, maxSpeed, easing, eps) {\n  var cur = current;\n\n  if (cur.__damp === undefined) {\n    cur.__damp = {\n      position: new Vector3(),\n      rotation: new Quaternion(),\n      scale: new Vector3()\n    };\n    current.decompose(cur.__damp.position, cur.__damp.rotation, cur.__damp.scale);\n  }\n\n  if (Array.isArray(target)) mat.set.apply(mat, _toConsumableArray(target));else mat.copy(target);\n  mat.decompose(mPos, mRot, mSca);\n  a = damp3(cur.__damp.position, mPos, smoothTime, delta, maxSpeed, easing, eps);\n  b = dampQ(cur.__damp.rotation, mRot, smoothTime, delta, maxSpeed, easing, eps);\n  c = damp3(cur.__damp.scale, mSca, smoothTime, delta, maxSpeed, easing, eps);\n  current.compose(cur.__damp.position, cur.__damp.rotation, cur.__damp.scale);\n  return a || b || c;\n}\n\nvar easing = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  rsqw: rsqw,\n  exp: exp,\n  damp: damp,\n  dampAngle: dampAngle,\n  damp2: damp2,\n  damp3: damp3,\n  damp4: damp4,\n  dampE: dampE,\n  dampC: dampC,\n  dampQ: dampQ,\n  dampS: dampS,\n  dampM: dampM\n});\n\nexport { exp as a, dampAngle as b, damp2 as c, damp as d, easing as e, damp3 as f, damp4 as g, dampE as h, dampC as i, dampQ as j, dampS as k, dampM as l, rsqw as r };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}