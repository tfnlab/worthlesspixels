{"ast":null,"code":"import _classCallCheck from \"/Users/armenmerikyan/Desktop/wd/tfnlab.com/metagascarnext/stage-presets-gltfjsx/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/armenmerikyan/Desktop/wd/tfnlab.com/metagascarnext/stage-presets-gltfjsx/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { useMemo, useCallback } from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport { Texture } from 'three';\n\n/**\n *  Adapted from https://github.com/brunoimbrizi/interactive-particles/blob/master/src/scripts/webgl/particles/TrailTexture.js\n *  Changes:\n *    * accepts config as constructor params\n *    * frame-rate independent aging\n *    * added option to interpolate between slow mouse events\n *    * added option for smoothing between values to avoid large jumps in force\n */\n\n// smooth new sample (measurement) based on previous sample (current)\nfunction smoothAverage(current, measurement) {\n  var smoothing = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0.9;\n  return measurement * smoothing + current * (1.0 - smoothing);\n} // default ease\n\nvar easeCircleOut = function easeCircleOut(x) {\n  return Math.sqrt(1 - Math.pow(x - 1, 2));\n};\nvar TrailTexture = /*#__PURE__*/function () {\n  function TrailTexture() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 256 : _ref$size,\n      _ref$maxAge = _ref.maxAge,\n      maxAge = _ref$maxAge === void 0 ? 750 : _ref$maxAge,\n      _ref$radius = _ref.radius,\n      radius = _ref$radius === void 0 ? 0.3 : _ref$radius,\n      _ref$intensity = _ref.intensity,\n      intensity = _ref$intensity === void 0 ? 0.2 : _ref$intensity,\n      _ref$interpolate = _ref.interpolate,\n      interpolate = _ref$interpolate === void 0 ? 0 : _ref$interpolate,\n      _ref$smoothing = _ref.smoothing,\n      smoothing = _ref$smoothing === void 0 ? 0 : _ref$smoothing,\n      _ref$minForce = _ref.minForce,\n      minForce = _ref$minForce === void 0 ? 0.3 : _ref$minForce,\n      _ref$blend = _ref.blend,\n      blend = _ref$blend === void 0 ? 'screen' : _ref$blend,\n      _ref$ease = _ref.ease,\n      ease = _ref$ease === void 0 ? easeCircleOut : _ref$ease;\n    _classCallCheck(this, TrailTexture);\n    this.size = size;\n    this.maxAge = maxAge;\n    this.radius = radius;\n    this.intensity = intensity;\n    this.ease = ease;\n    this.interpolate = interpolate;\n    this.smoothing = smoothing;\n    this.minForce = minForce;\n    this.blend = blend;\n    this.trail = [];\n    this.force = 0;\n    this.initTexture();\n  }\n  _createClass(TrailTexture, [{\n    key: \"initTexture\",\n    value: function initTexture() {\n      this.canvas = document.createElement('canvas');\n      this.canvas.width = this.canvas.height = this.size;\n      this.ctx = this.canvas.getContext('2d');\n      this.ctx.fillStyle = 'black';\n      this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n      this.texture = new Texture(this.canvas);\n      this.canvas.id = 'touchTexture';\n      this.canvas.style.width = this.canvas.style.height = \"\".concat(this.canvas.width, \"px\");\n    }\n  }, {\n    key: \"update\",\n    value: function update(delta) {\n      var _this = this;\n      this.clear(); // age points\n\n      this.trail.forEach(function (point, i) {\n        point.age += delta * 1000; // remove old\n\n        if (point.age > _this.maxAge) {\n          _this.trail.splice(i, 1);\n        }\n      }); // reset force when empty (when smoothing)\n\n      if (!this.trail.length) this.force = 0;\n      this.trail.forEach(function (point) {\n        _this.drawTouch(point);\n      });\n      this.texture.needsUpdate = true;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.ctx.globalCompositeOperation = 'source-over';\n      this.ctx.fillStyle = 'black';\n      this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n  }, {\n    key: \"addTouch\",\n    value: function addTouch(point) {\n      var last = this.trail[this.trail.length - 1];\n      if (last) {\n        var dx = last.x - point.x;\n        var dy = last.y - point.y;\n        var dd = dx * dx + dy * dy;\n        var force = Math.max(this.minForce, Math.min(dd * 10000, 1));\n        this.force = smoothAverage(force, this.force, this.smoothing);\n        if (!!this.interpolate) {\n          var lines = Math.ceil(dd / Math.pow(this.radius * 0.5 / this.interpolate, 2));\n          if (lines > 1) {\n            for (var i = 1; i < lines; i++) {\n              this.trail.push({\n                x: last.x - dx / lines * i,\n                y: last.y - dy / lines * i,\n                age: 0,\n                force: force\n              });\n            }\n          }\n        }\n      }\n      this.trail.push({\n        x: point.x,\n        y: point.y,\n        age: 0,\n        force: this.force\n      });\n    }\n  }, {\n    key: \"drawTouch\",\n    value: function drawTouch(point) {\n      var pos = {\n        x: point.x * this.size,\n        y: (1 - point.y) * this.size\n      };\n      var intensity = 1;\n      if (point.age < this.maxAge * 0.3) {\n        intensity = this.ease(point.age / (this.maxAge * 0.3));\n      } else {\n        intensity = this.ease(1 - (point.age - this.maxAge * 0.3) / (this.maxAge * 0.7));\n      }\n      intensity *= point.force; // apply blending\n\n      this.ctx.globalCompositeOperation = this.blend;\n      var radius = this.size * this.radius * intensity;\n      var grd = this.ctx.createRadialGradient(pos.x, pos.y, Math.max(0, radius * 0.25), pos.x, pos.y, Math.max(0, radius));\n      grd.addColorStop(0, \"rgba(255, 255, 255, \".concat(this.intensity, \")\"));\n      grd.addColorStop(1, \"rgba(0, 0, 0, 0.0)\");\n      this.ctx.beginPath();\n      this.ctx.fillStyle = grd;\n      this.ctx.arc(pos.x, pos.y, Math.max(0, radius), 0, Math.PI * 2);\n      this.ctx.fill();\n    }\n  }]);\n  return TrailTexture;\n}();\nfunction useTrailTexture() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var size = config.size,\n    maxAge = config.maxAge,\n    radius = config.radius,\n    intensity = config.intensity,\n    interpolate = config.interpolate,\n    smoothing = config.smoothing,\n    minForce = config.minForce,\n    blend = config.blend,\n    ease = config.ease;\n  var trail = useMemo(function () {\n    return new TrailTexture(config);\n  }, [size, maxAge, radius, intensity, interpolate, smoothing, minForce, blend, ease]);\n  useFrame(function (_, delta) {\n    return void trail.update(delta);\n  });\n  var onMove = useCallback(function (e) {\n    return trail.addTouch(e.uv);\n  }, [trail]);\n  return [trail.texture, onMove];\n}\nexport { useTrailTexture };","map":{"version":3,"names":["useMemo","useCallback","useFrame","Texture","smoothAverage","current","measurement","smoothing","easeCircleOut","x","Math","sqrt","pow","TrailTexture","size","maxAge","radius","intensity","interpolate","minForce","blend","ease","trail","force","initTexture","canvas","document","createElement","width","height","ctx","getContext","fillStyle","fillRect","texture","id","style","delta","clear","forEach","point","i","age","splice","length","drawTouch","needsUpdate","globalCompositeOperation","last","dx","dy","y","dd","max","min","lines","ceil","push","pos","grd","createRadialGradient","addColorStop","beginPath","arc","PI","fill","useTrailTexture","config","_","update","onMove","e","addTouch","uv"],"sources":["/Users/armenmerikyan/Desktop/wd/tfnlab.com/metagascarnext/stage-presets-gltfjsx/node_modules/@react-three/drei/core/useTrailTexture.js"],"sourcesContent":["import { useMemo, useCallback } from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport { Texture } from 'three';\n\n/**\n *  Adapted from https://github.com/brunoimbrizi/interactive-particles/blob/master/src/scripts/webgl/particles/TrailTexture.js\n *  Changes:\n *    * accepts config as constructor params\n *    * frame-rate independent aging\n *    * added option to interpolate between slow mouse events\n *    * added option for smoothing between values to avoid large jumps in force\n */\n\n// smooth new sample (measurement) based on previous sample (current)\nfunction smoothAverage(current, measurement, smoothing = 0.9) {\n  return measurement * smoothing + current * (1.0 - smoothing);\n} // default ease\n\n\nconst easeCircleOut = x => Math.sqrt(1 - Math.pow(x - 1, 2));\n\nclass TrailTexture {\n  constructor({\n    size = 256,\n    maxAge = 750,\n    radius = 0.3,\n    intensity = 0.2,\n    interpolate = 0,\n    smoothing = 0,\n    minForce = 0.3,\n    blend = 'screen',\n    // source-over is canvas default. Others are slower\n    ease = easeCircleOut\n  } = {}) {\n    this.size = size;\n    this.maxAge = maxAge;\n    this.radius = radius;\n    this.intensity = intensity;\n    this.ease = ease;\n    this.interpolate = interpolate;\n    this.smoothing = smoothing;\n    this.minForce = minForce;\n    this.blend = blend;\n    this.trail = [];\n    this.force = 0;\n    this.initTexture();\n  }\n\n  initTexture() {\n    this.canvas = document.createElement('canvas');\n    this.canvas.width = this.canvas.height = this.size;\n    this.ctx = this.canvas.getContext('2d');\n    this.ctx.fillStyle = 'black';\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    this.texture = new Texture(this.canvas);\n    this.canvas.id = 'touchTexture';\n    this.canvas.style.width = this.canvas.style.height = `${this.canvas.width}px`;\n  }\n\n  update(delta) {\n    this.clear(); // age points\n\n    this.trail.forEach((point, i) => {\n      point.age += delta * 1000; // remove old\n\n      if (point.age > this.maxAge) {\n        this.trail.splice(i, 1);\n      }\n    }); // reset force when empty (when smoothing)\n\n    if (!this.trail.length) this.force = 0;\n    this.trail.forEach(point => {\n      this.drawTouch(point);\n    });\n    this.texture.needsUpdate = true;\n  }\n\n  clear() {\n    this.ctx.globalCompositeOperation = 'source-over';\n    this.ctx.fillStyle = 'black';\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  addTouch(point) {\n    const last = this.trail[this.trail.length - 1];\n\n    if (last) {\n      const dx = last.x - point.x;\n      const dy = last.y - point.y;\n      const dd = dx * dx + dy * dy;\n      const force = Math.max(this.minForce, Math.min(dd * 10000, 1));\n      this.force = smoothAverage(force, this.force, this.smoothing);\n\n      if (!!this.interpolate) {\n        const lines = Math.ceil(dd / Math.pow(this.radius * 0.5 / this.interpolate, 2));\n\n        if (lines > 1) {\n          for (let i = 1; i < lines; i++) {\n            this.trail.push({\n              x: last.x - dx / lines * i,\n              y: last.y - dy / lines * i,\n              age: 0,\n              force\n            });\n          }\n        }\n      }\n    }\n\n    this.trail.push({\n      x: point.x,\n      y: point.y,\n      age: 0,\n      force: this.force\n    });\n  }\n\n  drawTouch(point) {\n    const pos = {\n      x: point.x * this.size,\n      y: (1 - point.y) * this.size\n    };\n    let intensity = 1;\n\n    if (point.age < this.maxAge * 0.3) {\n      intensity = this.ease(point.age / (this.maxAge * 0.3));\n    } else {\n      intensity = this.ease(1 - (point.age - this.maxAge * 0.3) / (this.maxAge * 0.7));\n    }\n\n    intensity *= point.force; // apply blending\n\n    this.ctx.globalCompositeOperation = this.blend;\n    const radius = this.size * this.radius * intensity;\n    const grd = this.ctx.createRadialGradient(pos.x, pos.y, Math.max(0, radius * 0.25), pos.x, pos.y, Math.max(0, radius));\n    grd.addColorStop(0, `rgba(255, 255, 255, ${this.intensity})`);\n    grd.addColorStop(1, `rgba(0, 0, 0, 0.0)`);\n    this.ctx.beginPath();\n    this.ctx.fillStyle = grd;\n    this.ctx.arc(pos.x, pos.y, Math.max(0, radius), 0, Math.PI * 2);\n    this.ctx.fill();\n  }\n\n}\n\nfunction useTrailTexture(config = {}) {\n  const {\n    size,\n    maxAge,\n    radius,\n    intensity,\n    interpolate,\n    smoothing,\n    minForce,\n    blend,\n    ease\n  } = config;\n  const trail = useMemo(() => new TrailTexture(config), [size, maxAge, radius, intensity, interpolate, smoothing, minForce, blend, ease]);\n  useFrame((_, delta) => void trail.update(delta));\n  const onMove = useCallback(e => trail.addTouch(e.uv), [trail]);\n  return [trail.texture, onMove];\n}\n\nexport { useTrailTexture };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}